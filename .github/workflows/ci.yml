name: Continuous Integration

on:
  pull_request:
    branches: [main]
  # Optional: Also run on pushes to feature branches if you want early feedback
  # push:
  #   branches: [feature/**]

jobs:
  # Job 1: Validate the frontend (from your old deploy.yml)
  validate-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Run Linter
        run: bun run lint

      - name: Run Type Check
        run: bun run typecheck

      - name: Run Build
        run: bun run build

  # Job 2: Validate the backend services
  validate-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # --- Go Gateway Validation ---
      - name: Build api-go image for scanning
        run: docker build -t nargis-api-go:ci ./apps/gateway

      - name: Scan api-go image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "nargis-api-go:ci"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          severity: "HIGH,CRITICAL"

      - name: Run go vet
        run: |
          cd apps/gateway-go # Use the renamed folder
          go vet ./...

      # --- Python Orchestrator Validation ---
      - name: Build api-py image for scanning
        run: docker build -t nargis-api-py:ci ./apps/api-py

      - name: Scan api-py image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "nargis-api-py:ci"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          severity: "HIGH,CRITICAL"

      - name: Run pip-audit for Python dependency vulnerabilities
        run: |
          python -m pip install uv
          uv pip install '.[ml]' -p $(which python) --system --no-cache-dir -e ./apps/api-py
          pip-audit
